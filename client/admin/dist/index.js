(()=>{var n={701:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.render()}render(){this.shadowRoot.innerHTML='\n        <style>\n        .admin {\n          background-color: hsl(249, 100%, 38%);\n          color: #fff;\n          display:flex;\n          flex-direction:column;\n          gap: 2rem;\n          height: 100vh;\n          padding: 5% 10%;\n          width: 80%;\n          position:relative;\n      }\n      \n      .admin form {\n          display: flex;\n          flex-direction: column;\n          gap: 1rem;\n          width: 100%;\n      }\n      .admin-content {\n          display: flex;\n          width: 100%;\n            justify-content: space-between;\n          height:100%;          \n      }\n\n        </style>\n        <div class="admin">\n              <slot name="header"></slot>\n              <slot name="dropdown"></slot>  \n              <div class="admin-content">\n                  <slot name="table"></slot>\n                  <slot name="form"></slot> \n              </div>\n          <slot name="modal"></slot>\n        </div>\n      '}connectedCallback(){}disconnectedCallback(){}attributeChangedCallback(n,e,t){}static get observedAttributes(){return["attribute1","attribute2"]}set attribute1(n){}set attribute2(n){}}customElements.define("admin-component",n)},319:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.render()}render(){this.shadowRoot.innerHTML='\n        <style>\n        .modal-close-button{\n            border:none;\n            width:1.8rem;\n            height:1.8rem;\n            background-color:blue;\n            color:#fff;\n            top:5%;\n            position:absolute;\n            left:90%;\n        }\n        .modal-close-button:hover{\n            background-color:black;\n        }\n        </style>\n        <button id="closeButton" class="modal-close-button">X</button>\n      '}connectedCallback(){this.shadowRoot.querySelector("#closeButton").addEventListener("click",(()=>{this.dispatchEvent(new CustomEvent("closeButtonClicked",{bubbles:!0,composed:!0}))}))}}customElements.define("close-button-component",n)},111:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.render()}render(){const n=this.getAttribute("button-content")||"OK";this.shadowRoot.innerHTML=`\n        <style>\n        #confirm{\n            border:none;\n            width:100%;\n            padding:1rem 2rem;\n            text-align:center;\n            display:flex;\n            align-items:center;\n            height:3rem;\n            background-color:blue;\n            color:#fff;\n        }\n        #confirm:hover{\n            background-color:black;\n        </style>\n        <button id="confirm">${n}</button>\n      `}connectedCallback(){this.shadowRoot.getElementById("confirm").addEventListener("click",(()=>{this.dispatchEvent(new CustomEvent("confirmButtonClicked",{bubbles:!0,composed:!0}))}))}}customElements.define("confirm-button-component",n)},328:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.render()}render(){this.shadowRoot.innerHTML='\n        <style>\n        .admin-bar {\n            background-color: hsl(0, 0%, 100%);\n            display: flex;\n            gap: 1rem;\n            height: 3rem;\n            justify-content: center;\n            padding: .4rem 10%;\n            text-align: center;\n            width: 80%;\n        }\n        .admin-bar .admin-bar-icon {\n            width: 10%;\n        }\n        \n        .admin-bar svg {\n            width: 100%;\n        }\n        </style>\n        <div class="admin-bar">\n            <div class="admin-bar-icon">\n                <svg xmlns="http://www.w3.org/2000/svg" width="" height="" viewBox="0 0 512 512"><path fill="#000000" d="M256 23c-62.377 0-118.824 5.375-160.277 14.258-20.727 4.441-37.674 9.69-50.188 16.03-26.54 16.094-31.144 53.2-21.918 77.99C69.915 217.435 138.57 281.384 215 340.321V489c25.848-.604 80.089-14.04 82-41V340.322c67.639-60.819 155.483-122.156 191.383-209.045 5.479-17.026 3.503-55.854-6.424-67.166-4.04-4.23-9.237-7.654-15.494-10.824-12.514-6.34-29.461-11.588-50.188-16.03C374.824 28.376 318.377 23 256 23zm0 18c61.335 0 116.887 5.37 156.506 13.86C422.354 57.71 470.826 69.626 471 80c.175 10.464-46.091 22.442-58.494 25.14C372.886 113.63 317.335 119 256 119c-61.335 0-116.887-5.37-156.506-13.86C89.646 102.29 40.887 89.064 41 80c.12-9.68 46.092-22.442 58.494-25.14C139.114 46.37 194.665 41 256 41z"/></svg>\n            </div>\n        </div>\n      '}connectedCallback(){}}customElements.define("dropdown-component",n)},502:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render();const n=this.shadowRoot.querySelectorAll(".tabs ul li a"),e=this.shadowRoot.querySelectorAll(".tab-content");n.forEach((t=>{t.addEventListener("click",(()=>{e.forEach((n=>{n.classList.remove("active")})),n.forEach((n=>{n.classList.remove("active"),n.parentElement.classList.remove("active")}));const s=t.dataset.target;this.shadowRoot.getElementById(s).classList.add("active"),t.classList.add("active"),t.parentElement.classList.add("active")}))})),this.shadowRoot.querySelector(".clean-button").addEventListener("click",(()=>{this.shadowRoot.getElementById("my-form").reset(),alert("Se ha limpiado el formulario")})),this.shadowRoot.querySelector(".save-button").addEventListener("click",(()=>{alert("Se han guardado los datos del formulario correctamente.")}))}render(){const n=[{title:"Principal",content:'\n            <div class="form-data">\n              <div class="form-element">\n                <label>Nombre de usuario:</label>\n                <input type="text" name="username1" required />\n              </div>\n              <div class="form-element">\n                <div class="form-element-label">\n                  <label>Correo electr칩nico:</label>\n                </div>\n                <div class="form-element-input">\n                  <input type="email" name="email1" required />\n                </div>\n              </div>\n            </div>\n            <div class="form-data">\n              <div class="form-element">\n                <div class="form-element-label">\n                  <label>Contrase침a:</label>\n                </div>\n                <div class="form-element-input">\n                  <input type="password" name="password1" required />\n                </div>\n              </div>\n              <div class="form-element">\n                <div class="form-element-label">\n                  <label>Confirmar contrase침a:</label>\n                </div>\n                <div class="form-element-input">\n                  <input type="password" name="passwordCheck1" required />\n                </div>\n              </div>\n            </div>\n          '},{title:"Im치genes",content:'\n        <div class="form-data">\n          <div class="form-element">\n            <div class="form-element-label">\n              <label for="file-input">Subir archivo:</label>\n            </div>\n            <div class="form-element-input">\n              <input type="file" id="file-input" name="file-input">\n            </div>\n          </div>\n        </div>\n          '}];this.shadowRoot.innerHTML=`\n        <style>\n       \n          .admin-content-login {\n            display: flex;\n            flex-direction: column;\n            height: 100%;\n            width: 100%;\n            gap:3rem;\n\n          }\n          .tabs-menu {\n            align-items: center;\n            width:100%;\n            background-color: hsl(0, 0%, 100%);\n            display: flex;\n            height: 10%;\n            justify-content: space-between;\n          }\n          .tabs-menu .tabs {\n            color: #000;\n            display: flex;\n            gap: 1rem;\n            height: 100%;\n          }\n          .tabs-menu .tabs ul {\n            display: flex;\n            gap: 1rem;\n            height: 100%;\n            list-style: none;\n            margin: 0;\n            padding: 0;\n          }\n          .tabs-menu .tabs ul li {\n            align-items: center;\n            display: flex;\n            height: 100%;\n          }\n          .tabs-menu .tabs ul li a {\n            color: #000;\n            font-family: 'Poppins', sans-serif;\n            font-size: 1.5rem;\n            text-decoration: none;\n          }\n          .tab-link {\n            align-items: center;\n            cursor: pointer;\n            display: flex;\n            height: 100%;\n          }\n          .tab-link.active {\n            background-color: rgb(36, 92, 177);\n          }\n          .tab-link span {\n            font-family: 'Poppins', sans-serif;\n            font-size: 1.5rem;\n            font-weight: 300;\n            padding: 0 .6rem;\n          }\n          .tabs-menu .buttons {\n            display: flex;\n            gap: 1rem;\n            padding: .5rem 1rem;\n          }\n          .buttons .clean-button,\n          .buttons .save-button {\n            height: 2rem;\n            width: 2rem;\n            cursor: pointer;\n          }\n          .buttons .clean-button svg,\n          .buttons .save-button svg {\n            height: 100%;\n            width: 100%;\n          }\n          .buttons .clean-button svg:hover,\n          .buttons .save-button svg:hover{\n            fill:blue;\n          }\n          .tab-content {\n            display: none;\n            width: 100%;\n          }\n          .tab-content.active {\n            display: block;\n          }\n          #my-form {\n            width: 100%;\n            height: 100%;\n            display:flex;\n            flex-direction: column;\n          }\n          .form-element-label,\n          .form-element-input {\n            width: 100%;\n          }\n          .form-data {\n            display: flex;\n            justify-content: space-between;\n            padding: 0 5%;\n            width:90%;\n\n          }\n          .form-data label,\n          .form-data label {\n            font-family: 'Poppins', sans-serif;\n            font-size: 1.5rem;\n          }\n          input {\n            background-color: hsl(194, 57%, 58%);\n            font-family: 'Poppins', sans-serif;\n            font-size: 1.6rem;\n            width: 100%;\n          }        \n          .form-data .form-element{\n            display: flex;\n            flex-direction: column;\n            gap: 1rem;\n            width: 45%;\n          }\n          .form-element-input{\n            width:100%;\n          }\n          form-element-label{\n            width:100%;\n          }\n         \n      </style>\n      <div class="admin-content-login">\n        <div class="tabs-menu">\n          <div class="tabs">\n            <ul>\n            ${n.map(((n,e)=>`\n                  <li${0===e?' class="active"':""}>\n                    <a href="#" data-target="tab${e+1}" class="tab-link${0===e?" active":""}">${n.title}</a>\n                  </li>`)).join("")}\n            </ul>\n          </div>\n          <div class="buttons">\n            <div class="clean-button">\n              <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" height="" width="" version="1.1" id="Capa_1" viewBox="0 0 387.113 387.113" xml:space="preserve">\n                <g>\n                  <path style="fill:#010002;" d="M232.055,321.716L387.11,166.661L220.455,0L0.003,220.452l166.661,166.661l2.47-2.47h151.218   v-11.934H181.062L232.055,321.716z M370.235,166.655L232.055,304.835l-149.78-149.78L220.455,16.874L370.235,166.655z"/>\n                </g>\n              </svg>\n            </div>\n            <div class="save-button">\n              <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="" height="" viewBox="0 0 17 17" version="1.1">\n                <path d="M14.164 0h-12.664c-0.827 0-1.5 0.673-1.5 1.5v13.5c0 0.827 0.673 1.5 1.5 1.5h12.664c0.827 0 1.5-0.673 1.5-1.5v-13.5c0-0.827-0.673-1.5-1.5-1.5zM7 14.242l-5.121-5.121 1.414-1.414 3.707 3.707 6.293-6.293 1.414 1.414-7.707 7.707z"></path>\n              </svg>\n            </div>\n          </div>\n        </div>\n        <form id="my-form">\n        ${n.map(((n,e)=>`\n              <div class="tab-content${0===e?" active":""}" id="tab${e+1}">\n                ${n.content}\n              </div>`)).join("")}\n        </form>\n        </div>\n      </div>`}}customElements.define("form-component",n)},184:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.render()}render(){this.shadowRoot.innerHTML='\n        <style>\n        .hamburger{\n            cursor: pointer;\n            display:flex;\n            flex-direction: column;\n            gap:.5rem;\n        }\n        .line{\n            width:6rem;\n            height: .6rem;\n            background-color: rgb(255, 255, 255);\n        }\n        </style>\n        <div class="hamburger">\n            <span class="line"></span>\n            <span class="line"></span>\n            <span class="line"></span>\n        </div>\n      '}connectedCallback(){}}customElements.define("hamburger-component",n)},831:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.render()}render(){const n=this.getAttribute("logo")||"Logo",e=this.getAttribute("page-title")||"Clientes";this.shadowRoot.innerHTML=`\n        <style>\n        .admin-header {\n            align-items: center;\n            display: flex;\n            justify-content: space-between;\n        }\n        \n        .admin-header .admin-header-title,\n        .admin-header .admin-header-logo{\n            font-family: 'Poppins', sans-serif;\n            font-size: 1.6rem;\n        }\n        </style>\n        <div class="admin-header">\n            <div class="admin-header-logo">\n                <h2>${n}</h2>\n            </div>\n            <div class="admin-header-title">\n                <h2>${e}</h2>\n            </div>\n            <hamburger-component></hamburger-component>\n        </div>\n      `}connectedCallback(){}disconnectedCallback(){}attributeChangedCallback(n,e,t){}static get observedAttributes(){return["attribute1","attribute2"]}set attribute1(n){}set attribute2(n){}}customElements.define("header-component",n)},359:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.render()}render(){this.shadowRoot.innerHTML='\n        <style>\n        .modal{\n            width:20%;\n            height:30%;\n            background-color:aquamarine;\n            border:1px solid black;\n            position:absolute;\n            top:20%;\n            left:40%;\n            display:none;\n            padding:2rem 4rem;\n        }\n        .modal.active{\n            display:flex;\n            justify-content:center;\n            flex-direction:column;\n            align-items:center;\n            gap:1rem;\n        }\n        .modal-text{\n          width:100%;\n          font-family:\'Poppins\', sans-serif;\n          color:black;\n          font-size:1rem;\n        }\n       \n        </style>\n        <div class="modal">\n            <div class="modal-text">\n                <slot name="content"></slot>\n            </div>\n            <div class="modal-buttons">\n              <div class="close-button">\n                <slot name="close"></slot>\n              </div>\n              <div class="confirm-button">\n                <slot name="confirm"></slot>\n              </div>\n            </div>\n        </div>\n      '}connectedCallback(){document.addEventListener("deleteButtonClicked",(()=>{const n=document.querySelector("modal-component");n&&n.shadowRoot.querySelector(".modal").classList.add("active")})),document.addEventListener("closeButtonClicked",(()=>{const n=document.querySelector("modal-component");n&&n.shadowRoot.querySelector(".modal").classList.remove("active")})),document.addEventListener("confirmButtonClicked",(()=>{const n=document.querySelector("modal-component");n&&(alert("Eliminado correctamente"),n.shadowRoot.querySelector(".modal").classList.remove("active"))}))}}customElements.define("modal-component",n)},549:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.values=this.getAttribute("data-values")?JSON.parse(this.getAttribute("data-values")):[],console.log("values:",this.values),this.render()}render(){this.shadowRoot.innerHTML=`\n      <style>\n      .admin-content-table {\n        display: flex;\n        flex-direction: column;\n        gap: .5rem;\n        width: 100%;\n        height:100%;\n      }\n      \n      .table-item {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n      }\n      \n      .table-item-header {\n        background-color: hsl(194, 57%, 58%);\n        display: flex;\n        justify-content: flex-end;\n        padding: .5rem .3rem;\n      }\n      \n      .table-item-content {\n        background-color: hsl(214, 58%, 52%);\n        padding: 1rem;\n      }\n      \n      .edit-button,\n      .delete-button {\n        cursor: pointer;\n        height: 2rem;\n        width: 2rem;\n      }\n      \n      .edit-button svg,\n      .delete-button svg {\n        height: 100%;\n        width: 100%;\n      }\n      .edit-button svg:hover,\n      .delete-button svg:hover{\n        fill:#fff;\n      }\n      \n      .table-item-header .delete-button {\n        padding: 0 .5rem;\n      }\n      </style>\n      <div class="admin-content-table">\n      ${this.values.map((n=>`\n            <div class="table-item">\n              <div class="table-item-header">\n                <div class="edit-button"><svg xmlns="http://www.w3.org/2000/svg" width="" height="" viewBox="0 0 192 192" xml:space="preserve" fill="none"><path d="m104.175 90.97-4.252 38.384 38.383-4.252L247.923 15.427V2.497L226.78-18.646h-12.93zm98.164-96.96 31.671 31.67" class="cls-1" style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1" transform="translate(-77.923 40.646)"/><path d="m195.656 33.271-52.882 52.882" style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:5;stroke-dasharray:none;stroke-opacity:1" transform="translate(-77.923 40.646)"/></svg></div>\n                <div class="delete-button"><svg xmlns="http://www.w3.org/2000/svg" fill="#000000" width="800px" height="800px" viewBox="0 0 56 56"><path d="M 44.5235 48.6602 L 46.1407 14.3945 L 48.4844 14.3945 C 49.4454 14.3945 50.2187 13.5976 50.2187 12.6367 C 50.2187 11.6758 49.4454 10.8555 48.4844 10.8555 L 38.2422 10.8555 L 38.2422 7.3398 C 38.2422 3.9883 35.9688 1.8086 32.3595 1.8086 L 23.5938 1.8086 C 19.9844 1.8086 17.7344 3.9883 17.7344 7.3398 L 17.7344 10.8555 L 7.5391 10.8555 C 6.6016 10.8555 5.7813 11.6758 5.7813 12.6367 C 5.7813 13.5976 6.6016 14.3945 7.5391 14.3945 L 9.8829 14.3945 L 11.5000 48.6836 C 11.6641 52.0586 13.8907 54.1914 17.2657 54.1914 L 38.7579 54.1914 C 42.1095 54.1914 44.3595 52.0351 44.5235 48.6602 Z M 21.4844 7.5742 C 21.4844 6.2383 22.4688 5.3008 23.8751 5.3008 L 32.1016 5.3008 C 33.5313 5.3008 34.5157 6.2383 34.5157 7.5742 L 34.5157 10.8555 L 21.4844 10.8555 Z M 17.6173 50.6758 C 16.2579 50.6758 15.2500 49.6445 15.1797 48.2852 L 13.5391 14.3945 L 42.3907 14.3945 L 40.8438 48.2852 C 40.7735 49.6680 39.7891 50.6758 38.4063 50.6758 Z M 34.9610 46.5508 C 35.7344 46.5508 36.3204 45.9180 36.3438 45.0273 L 37.0469 20.2773 C 37.0704 19.3867 36.4610 18.7305 35.6641 18.7305 C 34.9376 18.7305 34.3282 19.4102 34.3048 20.2539 L 33.6016 45.0273 C 33.5782 45.8711 34.1641 46.5508 34.9610 46.5508 Z M 21.0626 46.5508 C 21.8595 46.5508 22.4454 45.8711 22.4219 45.0273 L 21.7188 20.2539 C 21.6954 19.4102 21.0626 18.7305 20.3360 18.7305 C 19.5391 18.7305 18.9532 19.3867 18.9766 20.2773 L 19.7032 45.0273 C 19.7266 45.9180 20.2891 46.5508 21.0626 46.5508 Z M 29.4298 45.0273 L 29.4298 20.2539 C 29.4298 19.4102 28.7969 18.7305 28.0235 18.7305 C 27.2500 18.7305 26.5938 19.4102 26.5938 20.2539 L 26.5938 45.0273 C 26.5938 45.8711 27.2500 46.5508 28.0235 46.5508 C 28.7735 46.5508 29.4298 45.8711 29.4298 45.0273 Z"/></svg></div>\n              </div>\n              <div class="table-item-content">\n                <div class="table-email"><span>Email: ${n.email}</span></div>\n                <div class="table-name"><span>Name: ${n.name}</span></div>\n                <div class="table-surname"><span>Apellidos: ${n.surname}</span></div>\n              </div>\n            </div>\n          `)).join("")}\n        </div>\n    \n      `,this.shadowRoot.querySelectorAll(".table-item-content").forEach(((n,e)=>{n.querySelector(".table-email").innerHTML=`Email: ${this.values[e].email}`,n.querySelector(".table-name").innerHTML=`Name: ${this.values[e].name}`,n.querySelector(".table-surname").innerHTML=`Apellidos: ${this.values[e].surname}`})),this.shadowRoot.querySelectorAll(".delete-button").forEach((n=>{n.addEventListener("click",(()=>{this.dispatchEvent(new CustomEvent("deleteButtonClicked",{bubbles:!0,composed:!0}))}))}))}connectedCallback(){}}customElements.define("table-component",n)},737:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}render(){const n=this.getAttribute("tabs"),e=n?JSON.parse(n):["Tab 1","Tab 2","Tab 3","Tab 4"];this.shadowRoot.innerHTML=`\n        <style>\n        .admin-content-login{\n            display: flex;\n            flex-direction: column;\n            gap:1rem;\n            height:100%;\n            padding:.5rem 0;\n            width:100%;\n        }\n        .tabs-menu{\n            align-items:center;\n            background-color: hsl(0, 0%, 100%);\n            display:flex;\n            height: 10%;\n            justify-content: space-between;\n            padding:0 .5rem;\n        }\n        .tabs-menu .tabs{\n            color:#000;\n            display:flex;\n            gap:1rem;\n            height: 100%;\n        }\n        .tabs-menu .tabs ul{\n            display: flex;\n            gap:1rem;\n            height: 100%;\n            list-style:none;\n            margin:0;\n        }\n        .tabs-menu .tabs ul li{\n            align-items: center;\n            display: flex;\n            height: 100%;\n        }\n        .tabs-menu .tabs ul li a{\n            color:#000;\n            font-family: 'Poppins' ,sans-serif;\n            font-size: 1.5rem;\n            text-decoration: none;\n        }\n        .tab-link{\n            align-items: center;\n            cursor: pointer;\n            display: flex;\n            height: 100%;\n        }\n        .tab-link.active{\n            background-color: rgb(36, 92, 177);\n        }\n        .tab-link span{\n            font-family: 'Poppins' , sans-serif;\n            font-size: 1.5rem;\n            font-weight: 300;\n            padding:0 .6rem;\n        }\n        .tabs-menu .buttons{\n            display: flex;\n            gap:1rem;\n            justify-content: end;\n            padding:.5rem 1rem;\n        }\n        .buttons .clean-button,\n        .buttons .save-button{\n            height:2rem;\n            width:2rem;\n            cursor:pointer;\n        }\n        .buttons .clean-button svg,\n        .buttons .save-button svg{\n            height:100%;\n            width:100%;\n        }\n        .tab-content{\n            display: none;\n            width:100%;\n        }\n        .tab-content.active{\n            display:block;\n        }\n        </style>\n        <div class="admin-content-login"> \n            <div class="tabs-menu">\n                <div class="tabs">\n                    <ul>\n                        ${e.map(((n,e)=>`\n                                    <li>\n                                        <div class="tab-link${0===e?" active":""}">\n                                            <a class="tab${0===e?" active":""}" data-target="tab${e+1}">${n}</a>\n                                        </div>\n                                    </li>`)).join("")}\n                    </ul>            \n                </div>\n                <div class="buttons">\n                    <div class="clean-button">\n                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" height="" width="" version="1.1" id="Capa_1" viewBox="0 0 387.113 387.113" xml:space="preserve">\n                            <g>\n                                <path style="fill:#010002;" d="M232.055,321.716L387.11,166.661L220.455,0L0.003,220.452l166.661,166.661l2.47-2.47h151.218   v-11.934H181.062L232.055,321.716z M370.235,166.655L232.055,304.835l-149.78-149.78L220.455,16.874L370.235,166.655z"/>\n                            </g>\n                            </svg>\n                    </div>\n                    <div class="save-button">\n                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="" height="" viewBox="0 0 17 17" version="1.1">\n                            <path d="M14.164 0h-12.664c-0.827 0-1.5 0.673-1.5 1.5v14c0 0.827 0.673 1.5 1.5 1.5h14c0.827 0 1.5-0.673 1.5-1.5v-12.724l-2.836-2.776zM8 1v4h3v-4h1v5h-8v-5h4zM3 16v-6h11v6h-11zM16 15.5c0 0.275-0.225 0.5-0.5 0.5h-0.5v-7h-13v7h-0.5c-0.276 0-0.5-0.225-0.5-0.5v-14c0-0.275 0.224-0.5 0.5-0.5h1.5v6h10v-6h0.756l2.244 2.196v12.304z" fill="#000000"/>\n                        </svg>\n                    </div>\n                </div>\n            </div>\n\n            \x3c!-- *****PENDIENTE MEJORAR LA FORMA EN QUE SE PASAN POR PAR츼METRO LOS TAB-CONTENT y como se asocian a su TAB-LINK correspondiente ***** --!>\n            <div class="tab-content active" id="tab1">\n            </div>\n            <div class="tab-content" id="tab2">\n                <input type="file">\n            </div>\n            <div class="tab-content" id="tab3"></div>\n            <div class="tab-content" id="tab4"></div>\n        </div>\n\n      `}connectedCallback(){this.render();const n=this.shadowRoot.querySelectorAll(".tabs ul li a"),e=this.shadowRoot.querySelectorAll(".tab-content");n.forEach((t=>{t.addEventListener("click",(()=>{e.forEach((n=>{n.classList.remove("active")})),n.forEach((n=>{n.classList.remove("active"),n.parentElement.classList.remove("active")})),console.log(t);const s=t.dataset.target;this.shadowRoot.getElementById(s).classList.add("active"),t.classList.add("active"),t.parentElement.classList.add("active")}))})),this.shadowRoot.querySelector(".clean-button").addEventListener("click",(()=>{this.dispatchEvent(new CustomEvent("cleanButtonClicked",{bubbles:!0,composed:!0}))})),this.shadowRoot.querySelector(".save-button").addEventListener("click",(()=>{alert("Se han guardado los datos del formulario correctamente.")}))}}customElements.define("tabs-component",n)}},e={};function t(s){var a=e[s];if(void 0!==a)return a.exports;var o=e[s]={exports:{}};return n[s](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var s in e)t.o(e,s)&&!t.o(n,s)&&Object.defineProperty(n,s,{enumerable:!0,get:e[s]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{"use strict";t(831),t(328),t(701),t(549),t(184),t(737),t(502),t(359),t(111),t(319)})()})();